##########################
## GLOBAL CONFIGURATION ##
##########################

# Extra configuration snippets
# Path names in this directory matching *.toml get alphabetically sorted and appended to this configuration
# If the path does not exist, or is not a directory, or is not absolute this setting is ingnored
# IMPORTANT: this path gets path-joined with "*.toml" and the result is then subject to glob expansion
snippets = "/etc/drbd-reactor.d"

#######################
## LOG CONFIGURATION ##
#######################

# If not configured, defaults to "info" level on stdout/stderr
[[log]]
## debugger plugin needs debug log level, default is "info"
# level = "info" # trace, debug, info, warn, error, off
## Path to a log file
# file = "/var/log/drbd-reactor.log"

##########################
## PLUGIN CONFIGURATION ##
##########################

## Enable the debugger
# [[debugger]]

# Configure a promoter
[[promoter]]
## Specify which resource should be watched. For example resource 'foo':
# [promoter.resources.foo]
## What should be started when the resource is promotable. Use absolute paths for arbitrary commands, otherwise
## the promoter assumes the item is a systemd unit.
# start = ["foo.mount", "foo.service"]
## if unset/empty, services from 'start' will be stopped in reverse order
# stop = []
## shell one-liner executed in a loop if a stop action fails
## if unset, this defaults to "true"
# on-stop-failure =  "echo b > /proc/sysrq-trigger"

# Configure a user mode helper filter
# [[umh]]
## Filter type
# [[umh.resource]]
# command = "drbd-reactor-role-change.sh"
# event-type = "Change"
## everything not Primary
# old.role = { operator = "NotEquals", value = "Primary" }
# new.role = "Primary"

# Configure a prometheus exporter
#[[prometheus]]
## generate enum types which generates considerably more data, defaults to false
# enums = false
## address and port combination, 9942 is the registered port for that exporter
# address = "0.0.0.0:9942"
